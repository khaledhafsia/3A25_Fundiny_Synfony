{% extends 'base.html.twig' %}

{% block title %}Investissements index{% endblock %}

{% block body %}
    <h1>Investissements index</h1>

<form id="sortForm">
    <label>
        Sort by amount ASC:
        <input type="radio" name="sort" value="asc">
    </label>
    <label>
        Sort by amount DESC:
        <input type="radio" name="sort" value="desc">
    </label>
</form>
<input type="text" id="searchInput" placeholder="Search by description...">
<div id="investissementsTableContainer">
    <table class="table" id="investissementsTable" >
        <thead>
            <tr>
                <th>Montant</th>
                <th>Description</th>
                <th>Date</th>
                <th>actions</th>
            </tr>
        </thead>
        <tbody>
        {% for investissement in investissements %}
            <tr>
                <td>{{ investissement.montant }}</td>
                <td>{{ investissement.description }}</td>
                <td>{{ investissement.date ? investissement.date|date('Y-m-d H:i:s') : '' }}</td>
                <td>
                    <a href="{{ path('app_investissements_show', {'id': investissement.id}) }}">show</a>
                    <a href="{{ path('app_investissements_edit', {'id': investissement.id}) }}">edit</a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="5">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    </div>

    <a href="{{ path('app_investissements_new') }}">Create new</a>

    <script>
    // Function to handle radio button click event
    document.querySelectorAll('input[type="radio"]').forEach(function(radio) {
        radio.addEventListener('click', function() {
            // Get the selected sorting option
            var sortOrder = this.value;
            // Send an AJAX request to the server
            var xhr = new XMLHttpRequest();
            xhr.open('GET', '{{ path('app_investissements_sort') }}' + '?sort=' + sortOrder, true);
            xhr.onload = function() {
                if (xhr.status >= 200 && xhr.status < 300) {
                    // Update the table with the sorted data
                    document.querySelector('.table').innerHTML = xhr.responseText;
                } else {
                    console.error(xhr.statusText);
                }
            };
            xhr.onerror = function() {
                console.error(xhr.statusText);
            };
            xhr.send();
        });
    });
</script>
<script>
document.getElementById('searchInput').addEventListener('input', function() {
    var searchValue = this.value.toLowerCase();
    var rows = document.querySelectorAll('#investissementsTable tbody tr');

    rows.forEach(function(row) {
        var description = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
        if (description.includes(searchValue)) {
            row.style.display = '';
        } else {
            row.style.display = 'none';
        }
    });
});
</script>
{% endblock %}
